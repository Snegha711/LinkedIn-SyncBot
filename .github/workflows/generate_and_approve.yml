name: Testing

on:
  workflow_dispatch: 
  push:
    branches:
      - main 

jobs:
  generate_post:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install Dependencies
        run: pip install google-generativeai

      - name: Generate LinkedIn Post
        id: generate_post
        run: |
          python -c """
          import json
          import google.generativeai as genai
          from datetime import datetime
          
          with open('files/topics.json', 'r') as file:
              topics = json.load(file)
          
          today = datetime.today().day  # Get current day
          print(f"Today's date (day): {today}")
          print(f"Topics available: {topics}")
          
          topic = topics.get(str(today))
          if topic is None:
              print("No topic found for today!")
              exit(1)
          
          print(f"Selected topic: {topic}")
          
          genai.configure(api_key='YOUR_GEMINI_API_KEY')
          model = genai.GenerativeModel('gemini-1.5-flash-latest')
          response = model.generate_content(topic)
          
          content = response.text if hasattr(response, 'text') else ""
          content = content.replace("*", "").replace("/", "").replace("\n", "").replace("\\", "").strip()
          
          print("Generated Content:")
          print(content)
          
          print(f"::set-output name=post_content::{content}")
          """
        env:
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}

      - name: Create GitHub Issue for Approval
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const content = `${{ steps.generate_post.outputs.post_content }}`;
            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: "Approve LinkedIn Post",
              body: `### Generated LinkedIn Post\n\n${content}\n\nClick 'Approve' to proceed.`
            });

  print_post:
    needs: generate_post
    runs-on: ubuntu-latest
    steps:
      - name: Get Approved Content from Issue
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const issues = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: "open",
              labels: "approved"
            });
            if (issues.data.length === 0) {
              console.log("No approved post found.");
              process.exit(1);
            }
            const approvedPost = issues.data[0].body;
            console.log("Approved LinkedIn Post Content:\n", approvedPost);
